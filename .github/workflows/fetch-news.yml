name: Fetch Tech News Cron

on:
  schedule:
    - cron: "0 */2 * * *"
  workflow_dispatch:

jobs:
  fetch-news:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      # Step 1: Checkout repository
      - name: Checkout Repo
        uses: actions/checkout@v3

      # Step 2: Fetch Tech News with error handling
      - name: Fetch Tech News
        id: fetch-news
        run: |
          echo "üïê Starting news fetch at $(date)"
          # Make the API call with detailed error handling
          response=$(curl -f -s -w "%{http_code}" -X GET \
            "http://localhost:3000/api/news/fetch?secret=${{ secrets.FETCH_SECRET }}")
          http_code=${response: -3}
          if [ "$http_code" -eq 200 ]; then
            echo "‚úÖ News fetch completed successfully"
            echo "success=true" >> $GITHUB_OUTPUT
          else
            echo "‚ùå News fetch failed with HTTP code: $http_code"
            echo "success=false" >> $GITHUB_OUTPUT
            exit 1
          fi

      # Step 3: Get current timestamp
      - name: Get current time
        id: time
        run: echo "timestamp=$(date -Iseconds)" >> $GITHUB_OUTPUT

      # Step 4: Send Notification Email (handles both success and failure)
      - name: Send Notification Email
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: ${{ secrets.EMAIL_USERNAME }}
          subject: ${{ steps.fetch-news.outputs.success == 'true' && '‚úÖ Tech News Fetch Successful' || 'üö® Tech News Fetch Failed - Immediate Attention Required' }}
          html_body: |
            <!DOCTYPE html>
            <html>
            <head>
            <meta charset="utf-8">
            <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            .container { max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background: linear-gradient(135deg, ${{ steps.fetch-news.outputs.success == 'true' && '#22c55e, #16a34a' || '#dc2626, #b91c1c' }}); color: white; padding: 20px; border-radius: 8px 8px 0 0; }
            .content { background: #f8fafc; padding: 20px; border-radius: 0 0 8px 8px; }
            .info-box { background: white; padding: 15px; border-radius: 5px; border-left: 4px solid ${{ steps.fetch-news.outputs.success == 'true' && '#22c55e' || '#dc2626' }}; margin: 15px 0; }
            .button { display: inline-block; background: ${{ steps.fetch-news.outputs.success == 'true' && '#22c55e' || '#dc2626' }}; color: white; padding: 12px 24px; text-decoration: none; border-radius: 5px; font-weight: bold; }
            .footer { margin-top: 20px; padding-top: 20px; border-top: 1px solid #e2e8f0; color: #64748b; font-size: 14px; }
            </style>
            </head>
            <body>
            <div class="container">
            <div class="header">
            <h1>${{ steps.fetch-news.outputs.success == 'true' && '‚úÖ Tech News Fetch Successful' || 'üö® Tech News Fetch Failed' }}</h1>
            <p>${{ steps.fetch-news.outputs.success == 'true' && 'Your automated news collection completed successfully' || 'Immediate attention required for your automated news collection' }}</p>
            </div>
            <div class="content">
            <p>Hello,</p>
            <p>${{ steps.fetch-news.outputs.success == 'true' && 'The automated tech news fetch from sources like AWS, TechCrunch, etc. has completed successfully.' || 'The automated tech news fetch has encountered an error and requires investigation.' }}</p>
            <div class="info-box">
            <h3>üîç Details</h3>
            <p><strong>Repository:</strong> ${{ github.repository }}</p>
            <p><strong>Workflow:</strong> ${{ github.workflow }}</p>
            <p><strong>Run ID:</strong> ${{ github.run_id }}</p>
            <p><strong>Triggered by:</strong> ${{ github.event_name }}</p>
            <p><strong>Time:</strong> ${{ steps.time.outputs.timestamp }}</p>
            </div>
            <a href="${{ github.serverUrl }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" class="button">
            ${{ steps.fetch-news.outputs.success == 'true' && 'View Run Details' || 'Investigate Failure' }}
            </a>
            <div class="footer">
            <p>This is an automated notification from your GitHub Actions workflow.</p>
            <p>Best regards,<br>Your Tech News Bot</p>
            </div>
            </div>
            </div>
            </body>
            </html>

      # Step 5: Always run cleanup/status
      - name: Workflow Status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "üéâ Workflow completed successfully"
          else
            echo "üí• Workflow failed or was cancelled"
          fi
          echo "üìä Workflow finished at: $(date)"

      - name: Performance Metrics
        if: always()
        run: |
          echo "Workflow execution time: $(( $(date +%s) - $(date -d "${{ github.workflow_run.created_at }}" +%s) )) seconds"
